//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

class {{ module_info.name }}ModuleConfigurator {

    let router = {{ module_info.name }}Router()
    let presenter = {{ module_info.name }}Presenter()
    let interactor = {{ module_info.name }}Interactor()
    let requestHandler = {{ module_info.name }}RequestHandler()
    let dataStore = {{ module_info.name }}DataStore()
    let apiRequester = {{ module_info.name }}APIRequester()


    let storyboard = UIStoryboard(name: "Main", bundle: nil)
    var {{ module_info.name | downcase}}ViewController: {{ module_info.name }}ViewController?

    init() {

        presenter.router = router
        presenter.interactor = interactor

        interactor.output = presenter
        interactor.requestHandlerInput = requestHandler

        requestHandler.output = interactor
        requestHandler.dataStoreInput = dataStore
        requestHandler.apiRequestorInput = apiRequester
        dataStore.output = requestHandler
        apiRequester.output = requestHandler

        router.konfigurator = self


        //View Controllers
        {{ module_info.name | downcase}}ViewController = storyboard.instantiateViewController(withIdentifier: "{{ module_info.name }}ViewController") as? {{ module_info.name }}ViewController
    }

    func configureModuleForViewInput<UIViewController>(viewInput: UIViewController) {
        for controller in viewInputs {
            if let viewController = controller{
                configure(viewController: viewController )
            }
        }
    }

    private func configure(viewController: {{ module_info.name }}ViewController) {

        if let view = viewController as? {{ module_info.name }}ViewController {
            presenter.view = view
            view.output = presenter
        }
    }

}
